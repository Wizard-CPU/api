// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: jdocs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jdocspb {

  /// <summary>Holder for reflection information generated from jdocs.proto</summary>
  public static partial class JdocsReflection {

    #region Descriptor
    /// <summary>File descriptor for jdocs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JdocsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtqZG9jcy5wcm90bxIHamRvY3NwYhocZ29vZ2xlL2FwaS9hbm5vdGF0aW9u",
            "cy5wcm90byJbCgRKZG9jEhMKC2RvY192ZXJzaW9uGAEgASgEEhMKC2ZtdF92",
            "ZXJzaW9uGAIgASgEEhcKD2NsaWVudF9tZXRhZGF0YRgDIAEoCRIQCghqc29u",
            "X2RvYxgEIAEoCSIXCgdFY2hvUmVxEgwKBERhdGEYASABKAkiGAoIRWNob1Jl",
            "c3ASDAoERGF0YRgBIAEoCSJbCgtXcml0ZURvY1JlcRIPCgd1c2VyX2lkGAEg",
            "ASgJEg0KBXRoaW5nGAIgASgJEhAKCGRvY19uYW1lGAMgASgJEhoKA2RvYxgE",
            "IAEoCzINLmpkb2NzcGIuSmRvYyKsAQoMV3JpdGVEb2NSZXNwEiwKBnN0YXR1",
            "cxgBIAEoDjIcLmpkb2NzcGIuV3JpdGVEb2NSZXNwLlN0YXR1cxIaChJsYXRl",
            "c3RfZG9jX3ZlcnNpb24YAiABKAQiUgoGU3RhdHVzEgwKCEFDQ0VQVEVEEAAS",
            "HAoYUkVKRUNURURfQkFEX0RPQ19WRVJTSU9OEAESHAoYUkVKRUNURURfQkFE",
            "X0ZNVF9WRVJTSU9OEAIiiQEKC1JlYWREb2NzUmVxEg8KB3VzZXJfaWQYASAB",
            "KAkSDQoFdGhpbmcYAiABKAkSKAoFaXRlbXMYAyADKAsyGS5qZG9jc3BiLlJl",
            "YWREb2NzUmVxLkl0ZW0aMAoESXRlbRIQCghkb2NfbmFtZRgBIAEoCRIWCg5t",
            "eV9kb2NfdmVyc2lvbhgCIAEoBCLAAQoMUmVhZERvY3NSZXNwEikKBWl0ZW1z",
            "GAEgAygLMhouamRvY3NwYi5SZWFkRG9jc1Jlc3AuSXRlbRpQCgRJdGVtEiwK",
            "BnN0YXR1cxgBIAEoDjIcLmpkb2NzcGIuUmVhZERvY3NSZXNwLlN0YXR1cxIa",
            "CgNkb2MYAiABKAsyDS5qZG9jc3BiLkpkb2MiMwoGU3RhdHVzEg0KCVVOQ0hB",
            "TkdFRBAAEgsKB0NIQU5HRUQQARINCglOT1RfRk9VTkQQAiJACgxEZWxldGVE",
            "b2NSZXESDwoHdXNlcl9pZBgBIAEoCRINCgV0aGluZxgCIAEoCRIQCghkb2Nf",
            "bmFtZRgDIAEoCSIPCg1EZWxldGVEb2NSZXNwIkUKE1B1cmdlQWNjb3VudERv",
            "Y3NSZXESDwoHdXNlcl9pZBgBIAEoCRIOCgZyZWFzb24YAiABKAkSDQoFbm90",
            "ZXMYAyABKAkiFgoUUHVyZ2VBY2NvdW50RG9jc1Jlc3AiTQoHVmlld0RvYxIP",
            "Cgd1c2VyX2lkGAEgASgJEg0KBXRoaW5nGAIgASgJEhAKCGRvY19uYW1lGAMg",
            "ASgJEhAKCGpzb25fZG9jGAQgASgJIiUKElZpZXdBY2NvdW50RG9jc1JlcRIP",
            "Cgd1c2VyX2lkGAEgASgJIi4KDFZpZXdEb2NzUmVzcBIeCgRkb2NzGAEgAygL",
            "MhAuamRvY3NwYi5WaWV3RG9jMucDCgVKZG9jcxJQCghXcml0ZURvYxIULmpk",
            "b2NzcGIuV3JpdGVEb2NSZXEaFS5qZG9jc3BiLldyaXRlRG9jUmVzcCIXgtPk",
            "kwIRIgwvMS93cml0ZS1kb2M6ASoSUAoIUmVhZERvY3MSFC5qZG9jc3BiLlJl",
            "YWREb2NzUmVxGhUuamRvY3NwYi5SZWFkRG9jc1Jlc3AiF4LT5JMCESIMLzEv",
            "cmVhZC1kb2NzOgEqElQKCURlbGV0ZURvYxIVLmpkb2NzcGIuRGVsZXRlRG9j",
            "UmVxGhYuamRvY3NwYi5EZWxldGVEb2NSZXNwIhiC0+STAhIiDS8xL2RlbGV0",
            "ZS1kb2M6ASoSTwoQUHVyZ2VBY2NvdW50RG9jcxIcLmpkb2NzcGIuUHVyZ2VB",
            "Y2NvdW50RG9jc1JlcRodLmpkb2NzcGIuUHVyZ2VBY2NvdW50RG9jc1Jlc3AS",
            "RQoPVmlld0FjY291bnREb2NzEhsuamRvY3NwYi5WaWV3QWNjb3VudERvY3NS",
            "ZXEaFS5qZG9jc3BiLlZpZXdEb2NzUmVzcBJMChZWaWV3QWNjb3VudERvY3NX",
            "aXRoUElJEhsuamRvY3NwYi5WaWV3QWNjb3VudERvY3NSZXEaFS5qZG9jc3Bi",
            "LlZpZXdEb2NzUmVzcEIuWixnaXRodWIuY29tL2RpZ2l0YWwtZHJlYW0tbGFi",
            "cy9hcGkvZ28vamRvY3NwYmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.Jdoc), global::Jdocspb.Jdoc.Parser, new[]{ "DocVersion", "FmtVersion", "ClientMetadata", "JsonDoc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.EchoReq), global::Jdocspb.EchoReq.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.EchoResp), global::Jdocspb.EchoResp.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.WriteDocReq), global::Jdocspb.WriteDocReq.Parser, new[]{ "UserId", "Thing", "DocName", "Doc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.WriteDocResp), global::Jdocspb.WriteDocResp.Parser, new[]{ "Status", "LatestDocVersion" }, null, new[]{ typeof(global::Jdocspb.WriteDocResp.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.ReadDocsReq), global::Jdocspb.ReadDocsReq.Parser, new[]{ "UserId", "Thing", "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.ReadDocsReq.Types.Item), global::Jdocspb.ReadDocsReq.Types.Item.Parser, new[]{ "DocName", "MyDocVersion" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.ReadDocsResp), global::Jdocspb.ReadDocsResp.Parser, new[]{ "Items" }, null, new[]{ typeof(global::Jdocspb.ReadDocsResp.Types.Status) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.ReadDocsResp.Types.Item), global::Jdocspb.ReadDocsResp.Types.Item.Parser, new[]{ "Status", "Doc" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.DeleteDocReq), global::Jdocspb.DeleteDocReq.Parser, new[]{ "UserId", "Thing", "DocName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.DeleteDocResp), global::Jdocspb.DeleteDocResp.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.PurgeAccountDocsReq), global::Jdocspb.PurgeAccountDocsReq.Parser, new[]{ "UserId", "Reason", "Notes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.PurgeAccountDocsResp), global::Jdocspb.PurgeAccountDocsResp.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.ViewDoc), global::Jdocspb.ViewDoc.Parser, new[]{ "UserId", "Thing", "DocName", "JsonDoc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.ViewAccountDocsReq), global::Jdocspb.ViewAccountDocsReq.Parser, new[]{ "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jdocspb.ViewDocsResp), global::Jdocspb.ViewDocsResp.Parser, new[]{ "Docs" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Jdoc : pb::IMessage<Jdoc> {
    private static readonly pb::MessageParser<Jdoc> _parser = new pb::MessageParser<Jdoc>(() => new Jdoc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Jdoc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jdoc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jdoc(Jdoc other) : this() {
      docVersion_ = other.docVersion_;
      fmtVersion_ = other.fmtVersion_;
      clientMetadata_ = other.clientMetadata_;
      jsonDoc_ = other.jsonDoc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jdoc Clone() {
      return new Jdoc(this);
    }

    /// <summary>Field number for the "doc_version" field.</summary>
    public const int DocVersionFieldNumber = 1;
    private ulong docVersion_;
    /// <summary>
    /// first version = 1; 0 => invalid or doesn't exist
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DocVersion {
      get { return docVersion_; }
      set {
        docVersion_ = value;
      }
    }

    /// <summary>Field number for the "fmt_version" field.</summary>
    public const int FmtVersionFieldNumber = 2;
    private ulong fmtVersion_;
    /// <summary>
    /// first version = 1; 0 => invalid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FmtVersion {
      get { return fmtVersion_; }
      set {
        fmtVersion_ = value;
      }
    }

    /// <summary>Field number for the "client_metadata" field.</summary>
    public const int ClientMetadataFieldNumber = 3;
    private string clientMetadata_ = "";
    /// <summary>
    /// arbitrary client-defined string, eg a data fingerprint (typ "", 32 chars max)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientMetadata {
      get { return clientMetadata_; }
      set {
        clientMetadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "json_doc" field.</summary>
    public const int JsonDocFieldNumber = 4;
    private string jsonDoc_ = "";
    /// <summary>
    /// must be a valid JSON document
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonDoc {
      get { return jsonDoc_; }
      set {
        jsonDoc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Jdoc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Jdoc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DocVersion != other.DocVersion) return false;
      if (FmtVersion != other.FmtVersion) return false;
      if (ClientMetadata != other.ClientMetadata) return false;
      if (JsonDoc != other.JsonDoc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DocVersion != 0UL) hash ^= DocVersion.GetHashCode();
      if (FmtVersion != 0UL) hash ^= FmtVersion.GetHashCode();
      if (ClientMetadata.Length != 0) hash ^= ClientMetadata.GetHashCode();
      if (JsonDoc.Length != 0) hash ^= JsonDoc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DocVersion != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(DocVersion);
      }
      if (FmtVersion != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(FmtVersion);
      }
      if (ClientMetadata.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientMetadata);
      }
      if (JsonDoc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JsonDoc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DocVersion != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DocVersion);
      }
      if (FmtVersion != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FmtVersion);
      }
      if (ClientMetadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientMetadata);
      }
      if (JsonDoc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonDoc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Jdoc other) {
      if (other == null) {
        return;
      }
      if (other.DocVersion != 0UL) {
        DocVersion = other.DocVersion;
      }
      if (other.FmtVersion != 0UL) {
        FmtVersion = other.FmtVersion;
      }
      if (other.ClientMetadata.Length != 0) {
        ClientMetadata = other.ClientMetadata;
      }
      if (other.JsonDoc.Length != 0) {
        JsonDoc = other.JsonDoc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DocVersion = input.ReadUInt64();
            break;
          }
          case 16: {
            FmtVersion = input.ReadUInt64();
            break;
          }
          case 26: {
            ClientMetadata = input.ReadString();
            break;
          }
          case 34: {
            JsonDoc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EchoReq : pb::IMessage<EchoReq> {
    private static readonly pb::MessageParser<EchoReq> _parser = new pb::MessageParser<EchoReq>(() => new EchoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EchoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoReq(EchoReq other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoReq Clone() {
      return new EchoReq(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EchoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EchoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EchoReq other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EchoResp : pb::IMessage<EchoResp> {
    private static readonly pb::MessageParser<EchoResp> _parser = new pb::MessageParser<EchoResp>(() => new EchoResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EchoResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoResp(EchoResp other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoResp Clone() {
      return new EchoResp(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EchoResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EchoResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EchoResp other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WriteDocReq : pb::IMessage<WriteDocReq> {
    private static readonly pb::MessageParser<WriteDocReq> _parser = new pb::MessageParser<WriteDocReq>(() => new WriteDocReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WriteDocReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteDocReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteDocReq(WriteDocReq other) : this() {
      userId_ = other.userId_;
      thing_ = other.thing_;
      docName_ = other.docName_;
      doc_ = other.doc_ != null ? other.doc_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteDocReq Clone() {
      return new WriteDocReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// 64 chars max
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "thing" field.</summary>
    public const int ThingFieldNumber = 2;
    private string thing_ = "";
    /// <summary>
    /// 64 chars max
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Thing {
      get { return thing_; }
      set {
        thing_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "doc_name" field.</summary>
    public const int DocNameFieldNumber = 3;
    private string docName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocName {
      get { return docName_; }
      set {
        docName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "doc" field.</summary>
    public const int DocFieldNumber = 4;
    private global::Jdocspb.Jdoc doc_;
    /// <summary>
    /// write rejected if (doc.doc_version != svc.doc_version)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Jdocspb.Jdoc Doc {
      get { return doc_; }
      set {
        doc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WriteDocReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WriteDocReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Thing != other.Thing) return false;
      if (DocName != other.DocName) return false;
      if (!object.Equals(Doc, other.Doc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Thing.Length != 0) hash ^= Thing.GetHashCode();
      if (DocName.Length != 0) hash ^= DocName.GetHashCode();
      if (doc_ != null) hash ^= Doc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Thing.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Thing);
      }
      if (DocName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DocName);
      }
      if (doc_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Doc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Thing.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Thing);
      }
      if (DocName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocName);
      }
      if (doc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Doc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WriteDocReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Thing.Length != 0) {
        Thing = other.Thing;
      }
      if (other.DocName.Length != 0) {
        DocName = other.DocName;
      }
      if (other.doc_ != null) {
        if (doc_ == null) {
          Doc = new global::Jdocspb.Jdoc();
        }
        Doc.MergeFrom(other.Doc);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Thing = input.ReadString();
            break;
          }
          case 26: {
            DocName = input.ReadString();
            break;
          }
          case 34: {
            if (doc_ == null) {
              Doc = new global::Jdocspb.Jdoc();
            }
            input.ReadMessage(Doc);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WriteDocResp : pb::IMessage<WriteDocResp> {
    private static readonly pb::MessageParser<WriteDocResp> _parser = new pb::MessageParser<WriteDocResp>(() => new WriteDocResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WriteDocResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteDocResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteDocResp(WriteDocResp other) : this() {
      status_ = other.status_;
      latestDocVersion_ = other.latestDocVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WriteDocResp Clone() {
      return new WriteDocResp(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Jdocspb.WriteDocResp.Types.Status status_ = global::Jdocspb.WriteDocResp.Types.Status.Accepted;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Jdocspb.WriteDocResp.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "latest_doc_version" field.</summary>
    public const int LatestDocVersionFieldNumber = 2;
    private ulong latestDocVersion_;
    /// <summary>
    /// latest version on service
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LatestDocVersion {
      get { return latestDocVersion_; }
      set {
        latestDocVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WriteDocResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WriteDocResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (LatestDocVersion != other.LatestDocVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Jdocspb.WriteDocResp.Types.Status.Accepted) hash ^= Status.GetHashCode();
      if (LatestDocVersion != 0UL) hash ^= LatestDocVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::Jdocspb.WriteDocResp.Types.Status.Accepted) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (LatestDocVersion != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(LatestDocVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::Jdocspb.WriteDocResp.Types.Status.Accepted) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (LatestDocVersion != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LatestDocVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WriteDocResp other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Jdocspb.WriteDocResp.Types.Status.Accepted) {
        Status = other.Status;
      }
      if (other.LatestDocVersion != 0UL) {
        LatestDocVersion = other.LatestDocVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Jdocspb.WriteDocResp.Types.Status) input.ReadEnum();
            break;
          }
          case 16: {
            LatestDocVersion = input.ReadUInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the WriteDocResp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("ACCEPTED")] Accepted = 0,
        /// <summary>
        /// soft error
        /// </summary>
        [pbr::OriginalName("REJECTED_BAD_DOC_VERSION")] RejectedBadDocVersion = 1,
        /// <summary>
        /// soft error
        /// </summary>
        [pbr::OriginalName("REJECTED_BAD_FMT_VERSION")] RejectedBadFmtVersion = 2,
      }

    }
    #endregion

  }

  public sealed partial class ReadDocsReq : pb::IMessage<ReadDocsReq> {
    private static readonly pb::MessageParser<ReadDocsReq> _parser = new pb::MessageParser<ReadDocsReq>(() => new ReadDocsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadDocsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocsReq(ReadDocsReq other) : this() {
      userId_ = other.userId_;
      thing_ = other.thing_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocsReq Clone() {
      return new ReadDocsReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "thing" field.</summary>
    public const int ThingFieldNumber = 2;
    private string thing_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Thing {
      get { return thing_; }
      set {
        thing_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Jdocspb.ReadDocsReq.Types.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(26, global::Jdocspb.ReadDocsReq.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Jdocspb.ReadDocsReq.Types.Item> items_ = new pbc::RepeatedField<global::Jdocspb.ReadDocsReq.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Jdocspb.ReadDocsReq.Types.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadDocsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadDocsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Thing != other.Thing) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Thing.Length != 0) hash ^= Thing.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Thing.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Thing);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Thing.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Thing);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadDocsReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Thing.Length != 0) {
        Thing = other.Thing;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Thing = input.ReadString();
            break;
          }
          case 26: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ReadDocsReq message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Item : pb::IMessage<Item> {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Jdocspb.ReadDocsReq.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          docName_ = other.docName_;
          myDocVersion_ = other.myDocVersion_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "doc_name" field.</summary>
        public const int DocNameFieldNumber = 1;
        private string docName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DocName {
          get { return docName_; }
          set {
            docName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "my_doc_version" field.</summary>
        public const int MyDocVersionFieldNumber = 2;
        private ulong myDocVersion_;
        /// <summary>
        /// 0 => always return latest version
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong MyDocVersion {
          get { return myDocVersion_; }
          set {
            myDocVersion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DocName != other.DocName) return false;
          if (MyDocVersion != other.MyDocVersion) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DocName.Length != 0) hash ^= DocName.GetHashCode();
          if (MyDocVersion != 0UL) hash ^= MyDocVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DocName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DocName);
          }
          if (MyDocVersion != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(MyDocVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DocName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DocName);
          }
          if (MyDocVersion != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MyDocVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.DocName.Length != 0) {
            DocName = other.DocName;
          }
          if (other.MyDocVersion != 0UL) {
            MyDocVersion = other.MyDocVersion;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DocName = input.ReadString();
                break;
              }
              case 16: {
                MyDocVersion = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ReadDocsResp : pb::IMessage<ReadDocsResp> {
    private static readonly pb::MessageParser<ReadDocsResp> _parser = new pb::MessageParser<ReadDocsResp>(() => new ReadDocsResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadDocsResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocsResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocsResp(ReadDocsResp other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocsResp Clone() {
      return new ReadDocsResp(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jdocspb.ReadDocsResp.Types.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Jdocspb.ReadDocsResp.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Jdocspb.ReadDocsResp.Types.Item> items_ = new pbc::RepeatedField<global::Jdocspb.ReadDocsResp.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Jdocspb.ReadDocsResp.Types.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadDocsResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadDocsResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadDocsResp other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ReadDocsResp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// (svc.doc_version == my_doc_version)
        /// </summary>
        [pbr::OriginalName("UNCHANGED")] Unchanged = 0,
        /// <summary>
        /// (svc.doc_version  > my_doc_version) || (svc.doc_version &lt; my_doc_version)
        /// </summary>
        [pbr::OriginalName("CHANGED")] Changed = 1,
        /// <summary>
        /// soft error
        /// </summary>
        [pbr::OriginalName("NOT_FOUND")] NotFound = 2,
      }

      public sealed partial class Item : pb::IMessage<Item> {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Jdocspb.ReadDocsResp.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          status_ = other.status_;
          doc_ = other.doc_ != null ? other.doc_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 1;
        private global::Jdocspb.ReadDocsResp.Types.Status status_ = global::Jdocspb.ReadDocsResp.Types.Status.Unchanged;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Jdocspb.ReadDocsResp.Types.Status Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "doc" field.</summary>
        public const int DocFieldNumber = 2;
        private global::Jdocspb.Jdoc doc_;
        /// <summary>
        /// json_doc=="" if (svc.doc_version==my_doc_version)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Jdocspb.Jdoc Doc {
          get { return doc_; }
          set {
            doc_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Status != other.Status) return false;
          if (!object.Equals(Doc, other.Doc)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Status != global::Jdocspb.ReadDocsResp.Types.Status.Unchanged) hash ^= Status.GetHashCode();
          if (doc_ != null) hash ^= Doc.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Status != global::Jdocspb.ReadDocsResp.Types.Status.Unchanged) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Status);
          }
          if (doc_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Doc);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Status != global::Jdocspb.ReadDocsResp.Types.Status.Unchanged) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          if (doc_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Doc);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.Status != global::Jdocspb.ReadDocsResp.Types.Status.Unchanged) {
            Status = other.Status;
          }
          if (other.doc_ != null) {
            if (doc_ == null) {
              Doc = new global::Jdocspb.Jdoc();
            }
            Doc.MergeFrom(other.Doc);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Status = (global::Jdocspb.ReadDocsResp.Types.Status) input.ReadEnum();
                break;
              }
              case 18: {
                if (doc_ == null) {
                  Doc = new global::Jdocspb.Jdoc();
                }
                input.ReadMessage(Doc);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteDocReq : pb::IMessage<DeleteDocReq> {
    private static readonly pb::MessageParser<DeleteDocReq> _parser = new pb::MessageParser<DeleteDocReq>(() => new DeleteDocReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDocReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDocReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDocReq(DeleteDocReq other) : this() {
      userId_ = other.userId_;
      thing_ = other.thing_;
      docName_ = other.docName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDocReq Clone() {
      return new DeleteDocReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "thing" field.</summary>
    public const int ThingFieldNumber = 2;
    private string thing_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Thing {
      get { return thing_; }
      set {
        thing_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "doc_name" field.</summary>
    public const int DocNameFieldNumber = 3;
    private string docName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocName {
      get { return docName_; }
      set {
        docName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDocReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDocReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Thing != other.Thing) return false;
      if (DocName != other.DocName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Thing.Length != 0) hash ^= Thing.GetHashCode();
      if (DocName.Length != 0) hash ^= DocName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Thing.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Thing);
      }
      if (DocName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DocName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Thing.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Thing);
      }
      if (DocName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDocReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Thing.Length != 0) {
        Thing = other.Thing;
      }
      if (other.DocName.Length != 0) {
        DocName = other.DocName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Thing = input.ReadString();
            break;
          }
          case 26: {
            DocName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteDocResp : pb::IMessage<DeleteDocResp> {
    private static readonly pb::MessageParser<DeleteDocResp> _parser = new pb::MessageParser<DeleteDocResp>(() => new DeleteDocResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDocResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDocResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDocResp(DeleteDocResp other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDocResp Clone() {
      return new DeleteDocResp(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDocResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDocResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDocResp other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PurgeAccountDocsReq : pb::IMessage<PurgeAccountDocsReq> {
    private static readonly pb::MessageParser<PurgeAccountDocsReq> _parser = new pb::MessageParser<PurgeAccountDocsReq>(() => new PurgeAccountDocsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurgeAccountDocsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurgeAccountDocsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurgeAccountDocsReq(PurgeAccountDocsReq other) : this() {
      userId_ = other.userId_;
      reason_ = other.reason_;
      notes_ = other.notes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurgeAccountDocsReq Clone() {
      return new PurgeAccountDocsReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private string reason_ = "";
    /// <summary>
    /// concise reason, eg "purged-via-api"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 3;
    private string notes_ = "";
    /// <summary>
    /// free-form text notes, eg "CC requested this via email"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurgeAccountDocsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurgeAccountDocsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Reason != other.Reason) return false;
      if (Notes != other.Notes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (Notes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Notes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurgeAccountDocsReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 26: {
            Notes = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PurgeAccountDocsResp : pb::IMessage<PurgeAccountDocsResp> {
    private static readonly pb::MessageParser<PurgeAccountDocsResp> _parser = new pb::MessageParser<PurgeAccountDocsResp>(() => new PurgeAccountDocsResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurgeAccountDocsResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurgeAccountDocsResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurgeAccountDocsResp(PurgeAccountDocsResp other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurgeAccountDocsResp Clone() {
      return new PurgeAccountDocsResp(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurgeAccountDocsResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurgeAccountDocsResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurgeAccountDocsResp other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// ViewDoc is a more end-user-friendly version of a JDOCS document, for
  /// viewing purposes by support or the end user. It contains the JSON
  /// document itself along with account/thing identifiers, but does not
  /// include doc_version and other metadata needed by a typical JDOCS
  /// client.
  /// </summary>
  public sealed partial class ViewDoc : pb::IMessage<ViewDoc> {
    private static readonly pb::MessageParser<ViewDoc> _parser = new pb::MessageParser<ViewDoc>(() => new ViewDoc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewDoc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewDoc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewDoc(ViewDoc other) : this() {
      userId_ = other.userId_;
      thing_ = other.thing_;
      docName_ = other.docName_;
      jsonDoc_ = other.jsonDoc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewDoc Clone() {
      return new ViewDoc(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "thing" field.</summary>
    public const int ThingFieldNumber = 2;
    private string thing_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Thing {
      get { return thing_; }
      set {
        thing_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "doc_name" field.</summary>
    public const int DocNameFieldNumber = 3;
    private string docName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocName {
      get { return docName_; }
      set {
        docName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "json_doc" field.</summary>
    public const int JsonDocFieldNumber = 4;
    private string jsonDoc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonDoc {
      get { return jsonDoc_; }
      set {
        jsonDoc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewDoc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewDoc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Thing != other.Thing) return false;
      if (DocName != other.DocName) return false;
      if (JsonDoc != other.JsonDoc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Thing.Length != 0) hash ^= Thing.GetHashCode();
      if (DocName.Length != 0) hash ^= DocName.GetHashCode();
      if (JsonDoc.Length != 0) hash ^= JsonDoc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Thing.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Thing);
      }
      if (DocName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DocName);
      }
      if (JsonDoc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JsonDoc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Thing.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Thing);
      }
      if (DocName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocName);
      }
      if (JsonDoc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonDoc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewDoc other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Thing.Length != 0) {
        Thing = other.Thing;
      }
      if (other.DocName.Length != 0) {
        DocName = other.DocName;
      }
      if (other.JsonDoc.Length != 0) {
        JsonDoc = other.JsonDoc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Thing = input.ReadString();
            break;
          }
          case 26: {
            DocName = input.ReadString();
            break;
          }
          case 34: {
            JsonDoc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewAccountDocsReq : pb::IMessage<ViewAccountDocsReq> {
    private static readonly pb::MessageParser<ViewAccountDocsReq> _parser = new pb::MessageParser<ViewAccountDocsReq>(() => new ViewAccountDocsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewAccountDocsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewAccountDocsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewAccountDocsReq(ViewAccountDocsReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewAccountDocsReq Clone() {
      return new ViewAccountDocsReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewAccountDocsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewAccountDocsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewAccountDocsReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewDocsResp : pb::IMessage<ViewDocsResp> {
    private static readonly pb::MessageParser<ViewDocsResp> _parser = new pb::MessageParser<ViewDocsResp>(() => new ViewDocsResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewDocsResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jdocspb.JdocsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewDocsResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewDocsResp(ViewDocsResp other) : this() {
      docs_ = other.docs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewDocsResp Clone() {
      return new ViewDocsResp(this);
    }

    /// <summary>Field number for the "docs" field.</summary>
    public const int DocsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jdocspb.ViewDoc> _repeated_docs_codec
        = pb::FieldCodec.ForMessage(10, global::Jdocspb.ViewDoc.Parser);
    private readonly pbc::RepeatedField<global::Jdocspb.ViewDoc> docs_ = new pbc::RepeatedField<global::Jdocspb.ViewDoc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Jdocspb.ViewDoc> Docs {
      get { return docs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewDocsResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewDocsResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!docs_.Equals(other.docs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= docs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      docs_.WriteTo(output, _repeated_docs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += docs_.CalculateSize(_repeated_docs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewDocsResp other) {
      if (other == null) {
        return;
      }
      docs_.Add(other.docs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            docs_.AddEntriesFrom(input, _repeated_docs_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
